ls
install.packages("KernSmooth")
library(KernSmooth)
320283198603304824 - 320206201012072618
320283198603304824L - 320206201012072618
x <- 4L
x
class(x)
x <- c("a", 4, T)
x
class(x)
a = c( 1, 3, 4)
b = c( 3 , 6, 9)
rbin(a, b)
rbind(a, b)
x <- list( 3, "a", "b",T)
x
x[[2]]
x = 1:4
x
x <- 1:4
x
y <- 2
x + y
pwd()
ls()
pwd
read.csv("d:/github/datasciencecoursera/hw1_data.csv")
data <- read.csv("d:/github/datasciencecoursera/hw1_data.csv")
data[1:10]
data
data[1:4,]
class(data)
nrows(data)
nrow(data)
data[152:153,]
data$Ozone
data$Ozone[3]
data$Ozone[47]
is.na(data)
b = is.na(data)
size(b)
class(b)
nrow(b)
sum(b)
sum(!is.na(data))
sum(data)
data
sum(!is.na(data))
a = c(3, 4, na, 5)
a = c(3, 4, NA, 5)
a
sum(a)
sum(is.na(apply(array, margin, ...)))
sum(is.na(a))
sum(!is.na(a))
sum(!is.na(data))
sum(is.na(data))
sum(is.na(data$Ozone))
data$Ozone
zone2 <- data$Ozone
zone2[ zone2 != NA]
zone2[ is.na(zone2)]
zone2[ !is.na(zone2)]
zone3 <- zone2[ !is.na(zone2)]
zone2
sum(zone3)
sum(zone3) / nrow(zone3)
ncol(zone2)
size(zone3)
length(zone3)
sum(zone3)/length(zone3)
mean(zone3)
data[1:10,]
data2 <- data[1:10,]
data2[data2 > 2]
length(data2[data2 > 2])
nrow(data2[data2 > 2])
data2[data2 > 2, exact:FLASE]
data
data
data2
data2[data2>10]
data2[data2>10] <- 0
data2
data2[data2>10 & data2$Wind < 8] <- 0
data
data
data2
data2[data2$Wind < 8] <- 0
data2$Wind[ data2$Wind < 8] <- 0
data2
data2 <- data[data>32,]
data2
data2 <- data[data[,]>32,]
data
data2 <- data[data[,]>31,]
data2
data
data[data[,1]>150,]
data[data[,1]==150,]
data
head(data)
data2 = data[1:6,]
data
data
data2
data2[,] > 20
data2[data2[,] > 20]
data2[data2[,] > 20, ]
data2[data2[,] > 20]
data2[,] > 20
data2[data2[,] > 20, byrow=T]
subset(data, Temp > 90)
subset(data, Temp > 90 & data > 31)
subset(data, Temp > 90 & data$Ozone > 31)
subset(data, Temp > 90 & data$ > 31)
subset(data, Temp > 90 & data[,] > 31)
data
subset(data, Temp > 90 & Ozone > 31)
b = subset(data, Temp > 90 & Ozone > 31)
class(b)
b
mean(b)
mean(b$Solar.R)
b = subset(data, Temp = 6)
b
b = subset(data, Month=6)
mean(b)
mean(b$Temp)
b
head(b)
b = subset(data, Month=6)
data
head(data)
subset(data, Month=6)
subset(data, Month==6)
b = subset(data, Month==6)
length(b$Temp)
b
mean(b$Temp)
b = subset(data, Month==5); max(b$Ozone)
b = subset(data, Month==5);
b
max(b)
max(b$Ozone)
b$Ozone
z = b$Ozone
z
z[z>32,]
z[z>32]
z[!is.na(z)]
max(z[!is.na(z)])
data
na.omit(data)
b = na.omit(data)
dump(b)
b
nrow(b)
sum(data.na)
sum(data.has.na)
data.has.na <- apply(final, 1, function(x){ayn(is.na(x))})
data.has.na <- apply(data.has.na, 1, function(x){ayn(is.na(x))})
install.packages("swirl")
packageVersion("swirl")
load(swirl)
library(swirl)
install_from_swirl("R Programming")
library(swirl)
install_from_swirl("R Programming")
swirl()
info()
main()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
z <- c(z, 555)
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
getpwd()
getwd()
ls()
x <- 9
ls()
dir()
?list.files
args(list.files)
old.dir <- getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
dir()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
args(file.copy)
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path("folder1", "folder2")
?dir.create
dir.create(file.path("testdir2", "testdir3"), recursive=TRUE)
dir()
setwd(old.dir)
1:20
pi:10
15:1
?`:`
seq(1, 20)
seq(0, 10, by=0.5)
my_seq <- seq(5, 10, lengh=30)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
req(0, times= 40)
rep(0, times= 40)
rep(c(0, 1, 20), times = 10)
rep(c(0, 1, 22), times = 10)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1,2), each = 10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name = c(my_char, "jerry")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", spe=" ")
paste("Hello", "world!", sep =" ")
paste(1:3, c("X", "Y", "Z"), sep="")
LETTERS = 'A':'Z'
LETTERS
paste(LETTERS, 1:4, sep="-")
swirl()
swirl()
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf/Inf
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[ y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(4, 5)
?matrix
my_matrix2 <- matrix( data=1:20, nrow=4, ncol=5)
identical(my_mtraix, my_matrix2)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(my_matrix, patients)
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patients", "age", "weight", "bp", "rating", "test")
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data, cnames)
?colnames
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FLASE == TRUE) == FALSE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5 == 7)
FALSE & FALSE
TRUE  & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which ( ints > 7)
any(ints < 0)
all(x > 0)
all(ints > 0)
Sys.Date()
mean(c(2,4,5))
getwd()
submit()
boring_function('mmm')
boring_function('My first function!')
boring_function
submit()
my_mean(4, 5, 10)
my_mean(4, 5, 10)
my_mean(c(4, 5, 10)
)
submit()
7 % 3
7 %% 3
7 %% 3
remainder(5, 3)
submit()
remainder(5)
remainder(4)
submit()
remainder(5)
remainder(11, 5)
emainder(divisor = 11, num = 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd, c(1.4, 3,6, 7.9, 8.8))
sd(c(1.4, 3,6, 7.9, 8.8))
evaluate(sd, c(1.4, 3,6, 7.9, 8.8))
info()
play()
evaluate(sum, c(2, 4, 6))
evaluate(median, c(7, 40, 9))
nxt()
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1)}, 6)
evaluate(function(x){x+1}, 6)
evaluate( function(x){x[1]}, c(8, 4, 0))
evaluate( function(x){x[length(x)]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
play()
telegram("hello", "ok")
telegram("Good", "morning")
nxt()
submit()
telegram("ooo")
submit()
mad_libs(place="changjiang", adjective="me", noun="30")
submit
submit()
'I' %p% 'Love' %p% 'R!'
play()
"Good" %p% "job!"
'I' %p% 'Love'
'I' %p% 'Love' %p% 'R'
nxt()
'I' %p% 'Love' %p% 'R'
'I' %p% 'Love' %p% 'R!'
'I' %p% 'love' %p% 'R!'
Sys.Date()
d1 <- Sys.Date()
class(d1)
unclass(dl)
unclass(d1)
d1
d2 <- as.DAte("1969-01-01")
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time9)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 = as.POSIXlt(Sys.time())
t2 <- as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
play()
cube <- function(x, n){ x^3}
cube(3)
x <- 1:10
if (x < 5){}
nxt()
ll
str(unclass(t2))
t2$min
weekdays()
d1 <- weekdays()
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
strptime(t3, "%B %d, %Y %H:%M")
t3
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
t1
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units='days')
getwd()
cd "D:\github\datasciencecoursera"
cd "D:/github/datasciencecoursera"
cd("D:/github/datasciencecoursera")
setwd("D:\github\datasciencecoursera")
setwd("D:/github/datasciencecoursera")
getwd()
ls()
dir()
"a" + "b"
paste("a", "b")
paste("a", "b", sep="")
folder <- "D:\github\datasciencecoursera\specdata"
folder <- "D:/github/datasciencecoursera/specdata"
pollutantmean(folder, "nitrate", 1:5
)
getwd()
pollutantmean(folder, "nitrate", 1:5
)
pollutantmean(folder, "nitrate", 1:5)
path()
getwd()
dir()
telegram("dd")
