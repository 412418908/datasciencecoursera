outcomeCol
?stop
if (is.na(outcomeCol)){
stop("invalid outcome");
}
data <- read.csv("outcome-of-care-measures", header=TRUE, sep=",")
data <- read.csv("outcome-of-care-measures.csv", header=TRUE, sep=",")
names(data)
unique(data$State)
stateVec <- unique(data$State);
which(stateVec = "HI")
which(stateVec == "HI")
which(stateVec == "HI9")
which(stateVec == "HI9")...length()
stateVec == "HI9"
"HI" %in% stateVec
"HI2" %in% stateVec
?subset
subset(data, data$State == "TX")
data1 <- subset(data, data$State == "TX")
head(data1)
summary(data1)
max(data1[[11]])
max(data1[, 11)
max(data1[, 11])
max(1:10)
head(data1[,11])
data1[, 11] <- as.numeric(data1[, 11])
head(data1[,11])
max(data1[,11])
mxValue <- max(data1[,11])
subset(data1, data1[,11]==mxValue)
vec <- data1[, 11]
vec
subset(vec, vec==mxValue)
data2 <- subset(data1, data1[,11]==mxValue)
head(data)
head(data)
head(data2)
head(data2$State)
minValue <- min(data1[,11])
history()
data2 <- subset(data1, data1[,11]==minValue)
nrow(data)
nrow(data2)
data2
history
c <- c(2, 3, 1, NA)
min(c)
names(state2)
names(data2)
clear()
cls()
?clear
rm()
ls()
rm(list())
rm(ls())
rm(list=ls())
ls()
state <- 'TX'; outcome <- 'heart attack';
validOutcomes <- c("heart attack", "heart failure", "pneumo");
validCols <- c(11, 17, 23);
idx <- which(validOutcomes == outcome);
outcomeCol <- validCols[idx[1]];
if (is.na(outcomeCol)){
stop("invalid outcome");
}
data <- read.csv("outcome-of-care-measures.csv", header=TRUE, sep=",")
stateVec <- unique(data$State);
if (!(state %in% stateVec)){
stop("invalid state");
}
stateData <- subset(data, data$State == state);
nrow(stateData)
stateData <- subset(stateData, !is.na(stateData[,outcomeCol]));
nrow(stateData)
minValue = min(stateData[,outcomeCol]);
stateData[,outcomeCol] <- as.numeric(stateData[,outcomeCol]);
stateData <- subset(stateData, !is.na(stateData[,outcomeCol]));
minValue = min(stateData[,outcomeCol]);
minValue
stateData <- subset(stateData, stateData[,outcomeCol] == minValue);
hospitalNames = stateData$Hospital.Name;
hospitalNames
sort(hospitalNames)[1]
source("best.R"); best("TX", "heart attack")
source("best.R"); best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
source("best.R")
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "hert attack")
v <- 1:5
v[-1]
v
v[-2]
v[c(-1,-2)]
v[-2:-1]
v[0:-1]
v[99]
source("rankhospital.R"); rankhospital("TX", "heart failure", 4)
state <- "TX"
outcome <- "heart failure"
num <- 4
validOutcomes <- c("heart attack", "heart failure", "pneumonia");
validCols <- c(11, 17, 23);
idx <- which(validOutcomes == outcome);
outcomeCol <- validCols[idx[1]];
if (is.na(outcomeCol)){
stop("invalid outcome");
}
# get all states into stateVec
data <- read.csv("outcome-of-care-measures.csv", header=TRUE, sep=",", colClasses = "character")
stateVec <- unique(data$State);
if (!(state %in% stateVec)){
stop("invalid state");
}
# grep data belong to the special state, grep data that is NA
stateData <- subset(data, data$State == state);
stateData[,outcomeCol] <- as.numeric(stateData[,outcomeCol]);
stateData <- subset(stateData, !is.na(stateData[,outcomeCol]));
stateData
nrow(stateData)
head(stateData)
head(stateData$Hospital.Name)
head(stateData$Hospital.Name)
d2 <- stateData[order(stateData[,17])]
order(stateData[,17])
d2 <- stateData[order(stateData[,17]), ]
d2
head(d2[,17])
head(d2[,17], 33)
c = c("ok", "ss", "ok", "df")
unique(c)
stateData <- stateData[order(stateData[,outcomeCol]), ]
#get hospital names , and sort by alphabet
hospitalNames <- unique(stateData$Hospital.Name);
hospitalNames
head(hospitalNames, 10)
validOutcomes <- c("heart attack", "heart failure", "pneumonia");
validCols <- c(11, 17, 23);
idx <- which(validOutcomes == outcome);
outcomeCol <- validCols[idx[1]];
if (is.na(outcomeCol)){
stop("invalid outcome");
}
# get all states into stateVec
data <- read.csv("outcome-of-care-measures.csv", header=TRUE, sep=",", colClasses = "character")
stateVec <- unique(data$State);
if (!(state %in% stateVec)){
stop("invalid state");
}
# grep data belong to the special state, grep data that is NA
stateData <- subset(data, data$State == state);
stateData[,outcomeCol] <- as.numeric(stateData[,outcomeCol]);
stateData <- subset(stateData, !is.na(stateData[,outcomeCol]));
stateData <- stateData[order(stateData[,outcomeCol]), ]
head(stateData$Hospital.Name)
head(stateData$Hospital.Name, stateData$Hospital.Name)
head(stateData)
stateData(, c(7, 17))
stateData[, c(7, 17)]
head(stateData[, c(2, 7, 17)])
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
?order
?sort
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("TX", "heart failure", 3)
source("rankhospital.R")
rankhospital("TX", "heart failure", 3)
rankhospital("TX", "heart failure", 4)
a <- c(45,50,10,96)
sort(a)
order(a)
t <- data.frame(country=c("cn","us","cn", "us"), gdp=c(32, 42, 39, 48))
t
split(t$gdp, t$country)
t2 <- split(t$gdp, t$country)
str(t2)
t2$cn
t2["cn"]
t2[["cn"]]
t2[,2
]
t2[[2]]
data <- read.csv("outcome-of-care-measures.csv", header=TRUE, sep=",", colClasses = "character")
data2 <- data[, c("State", 17)]
data2 <- data[, list("State", 17)]
data2 <- data[, list(3, 17)]
data2 <- data[, c(3, 17)]
head(data2)
?list
list("cn", 3)
names(data)
which(names(data) == 'State'
)
t2 <- split(t$gdp, t$country)
t2
t2 <- split(t, t$country)
t2
class(t2)
t2$cn
class(t2$cn)
?split
t2
lapply(t2, function(x){sum(x$gdp)})
tapply(t2, function(x){sum(x$gdp)})
sapply(t2, function(x){sum(x$gdp)})
a <- sapply(t2, function(x){sum(x$gdp)})
class(a)
names(t2)
sapply(t2, function(x){c(x, x+1)})
sapply(t2, function(x){c(1,2)})
t3 <- sapply(t2, function(x){c(1,2)})
class(t3)
data[1]
class(data[1])
nrow(data[1])
class(data)
dim(data)
nrow(data[1,])
dim(data[1])
t2
t2[[us]]
outcome <- ""heart attack""
outcome <- "heart attack"
num <- 20
validOutcomes <- c("heart attack", "heart failure", "pneumonia");
validCols <- c(11, 17, 23);
idx <- which(validOutcomes == outcome);
outcomeCol <- validCols[idx[1]];
if (is.na(outcomeCol)){
stop("invalid outcome");
}
# split data by state
data <- read.csv("outcome-of-care-measures.csv", header=TRUE, sep=",", colClasses = "character");
colnames <- names(data);
hospitalCol <- which(colnames == "Hospital.Name");
stateCol <- which(colnames == "State");
data[, outcomeCol] <- as.numeric(data[, outcomeCol]);
data <- subset(data, !is.na(data[, outcomeCol]));
data <- data.frame(name=data[,hospitalCol], State=data[,stateCol], outcome=data[,outcomeCol]);
stateData <- split(data, data$State);
dim(stateData)
class(stateData)
head(stateData)
stateData[1]
stateData <- lapply(stateData, function(item){
item <- item[order(item$outcome), ];
if ("best" == num){
return(item[1,]);
}else if ("worst" == num){
return(item[length(item),]);
}else{
return(item[num,]);
}
});
stateData[1]
stateData[2]
stateData[3]
str(stateData)
class(stateData)
names(stateData)
lapply(stateData, function(item){item$name})
sapply(stateData, function(item){item$name})
vapply(stateData, function(item){item$name})
d2 <- sapply(stateData, function(item){item$name})
head(d2)
class(d2)
d2 <- lapply(stateData, function(item){item$name})
class(d2)
d2 <- tapply(stateData, function(item){item$name})
?vapply
?vapply
d2 <- vapply(stateData, function(item){item$name})
d2 <- vapply(stateData, function(item){item[["name"]]})
d2 <- vapply(stateData, function(item){"s"})
d2 <- vapply(stateData, function(item)"s")
d2 <- vapply(stateData, function(item)3, numeric(1))
d2
d2 <- vapply(stateData, function(item)"s", character(1))
d2
d2 <- vapply(stateData, function(item)item$name, character(1))
stateData[[1]]
stateData
stateData["WV"]
stateData["WV"]$name
i <- stateData["WV"]
i$name
i
class(i)
i <- stateData$WV
i
class(i)
stateData$WV$name
vapply(stateData, function(item){class(item)}, character(1))
vapply(stateData, function(item){item$name}, character(1))
sapply(stateData, function(item){item$name})
tmp <- sapply(stateData, function(item){print(item$name)})
length(tmp)
tmp <- sapply(stateData, function(item){print(class(item$name))})
tmp <- sapply(stateData, function(item){print(class(as.character( item$name ))})
tmp <- sapply(stateData, function(item){print(class(as.character( item$name ))}  )
tmp <- sapply(stateData, function(item) print(class(as.character( item$name )))  )
tmp <- sapply(stateData, function(item) print(as.character( item$name ))  )
vecHospital <- vapply(stateData, function(item){as.character(item$name)}, character(1))
vecHospital
class(vecHospital)
head(vecHospital)
length(vecHospital)
source("rankall.R"); head(rankall("heart attack", 20), 10)
otucome <- "heart attack"
num <- 20
validOutcomes <- c("heart attack", "heart failure", "pneumonia");
validCols <- c(11, 17, 23);
idx <- which(validOutcomes == outcome);
outcomeCol <- validCols[idx[1]];
if (is.na(outcomeCol)){
stop("invalid outcome");
}
# split data by state
data <- read.csv("outcome-of-care-measures.csv", header=TRUE, sep=",", colClasses = "character");
colnames <- names(data);
hospitalCol <- which(colnames == "Hospital.Name");
stateCol <- which(colnames == "State");
data[, outcomeCol] <- as.numeric(data[, outcomeCol]);
data <- subset(data, !is.na(data[, outcomeCol]));
data <- data.frame(name=data[,hospitalCol], State=data[,stateCol], outcome=data[,outcomeCol]);
stateData <- split(data, data$State);
stateData <- lapply(stateData, function(item){
item <- item[order(item$outcome), ];
if ("best" == num){
return(item[1,]);
}else if ("worst" == num){
return(item[length(item),]);
}else{
return(item[num,]);
}
});
vecState <- names(stateData);
vecHospital <- vapply(stateData, function(item){as.character(item$name)}, character(1))
vecState
vecHospital
data.frame(state=vecState, hospital=vecHospital)
source("rankall.R"); head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
dim(data)
length(data)
nrow(data)
source("rankall.R"); head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
tail(rankall("heart failure"), 10)
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
data <- read.csv("outcome-of-care-measures.csv", header=TRUE, sep=",", colClasses = "character")
data$Hospital.Name
class(data$Hospital.Name)
length(data$Hospital.Name)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
as.numeric("NA")
as.numeric("3")
best("TX", "heart attack")
best("MD", "heart attack")
rankhospital("TX", "heart failure", 4)
state="TX"
outcome <- "heart attack"
validOutcomes <- c("heart attack", "heart failure", "pneumonia");
validCols <- c(11, 17, 23);
idx <- which(validOutcomes == outcome);
outcomeCol <- validCols[idx[1]];
if (is.na(outcomeCol)){
stop("invalid outcome");
}
# get all states into stateVec
data <- read.csv("outcome-of-care-measures.csv", header=TRUE, sep=",", colClasses = "character")
stateVec <- unique(data$State);
if (!(state %in% stateVec)){
stop("invalid state");
}
# grep data belong to the special state, grep data that is NA
stateData <- subset(data, data$State == state);
stateData[,outcomeCol] <- as.numeric(stateData[,outcomeCol]);
stateData <- subset(stateData, !is.na(stateData[,outcomeCol]));
stateData <- data.frame(name=stateData$Hospital.Name, outcome=stateData[[outcomeCol]]);
stateData
stateData <- stateData[order(stateData$outcome), ]
stateData
outcome
state
outcome
outcome <- "heart failure"
outcome
outcome <- "heart attack"
outcome = "heart failure"
outcome
history
history()
outcome
validOutcomes <- c("heart attack", "heart failure", "pneumonia");
validCols <- c(11, 17, 23);
idx <- which(validOutcomes == outcome);
outcomeCol <- validCols[idx[1]];
if (is.na(outcomeCol)){
stop("invalid outcome");
}
# get all states into stateVec
data <- read.csv("outcome-of-care-measures.csv", header=TRUE, sep=",", colClasses = "character")
stateVec <- unique(data$State);
if (!(state %in% stateVec)){
stop("invalid state");
}
# grep data belong to the special state, grep data that is NA
stateData <- subset(data, data$State == state);
stateData[,outcomeCol] <- as.numeric(stateData[,outcomeCol]);
stateData <- subset(stateData, !is.na(stateData[,outcomeCol]));
stateData <- data.frame(name=stateData$Hospital.Name, outcome=stateData[[outcomeCol]]);
stateData <- stateData[order(stateData$outcome), ]
stateData
validOutcomes <- c("heart attack", "heart failure", "pneumonia");
validCols <- c(11, 17, 23);
idx <- which(validOutcomes == outcome);
outcomeCol <- validCols[idx[1]];
if (is.na(outcomeCol)){
stop("invalid outcome");
}
# get all states into stateVec
data <- read.csv("outcome-of-care-measures.csv", header=TRUE, sep=",", colClasses = "character")
stateVec <- unique(data$State);
if (!(state %in% stateVec)){
stop("invalid state");
}
# grep data belong to the special state, grep data that is NA
stateData <- subset(data, data$State == state);
stateData[,outcomeCol] <- as.numeric(stateData[,outcomeCol]);
#stateData <- subset(stateData, !is.na(stateData[,outcomeCol]));
stateData <- data.frame(name=stateData$Hospital.Name, outcome=stateData[[outcomeCol]]);
stateData <- stateData[order(stateData$outcome), ]
stateData
stateData <- stateData[order(stateData$outcome, stateData$name), ]
stateData
head(stateData)
?suppressWarnings
source("rankhospital.R");
rankhospital("TX", "heart failure", 4)
source("rankhospital.R");
rankhospital("TX", "heart failure", 4)
traceback()
validOutcomes <- c("heart attack", "heart failure", "pneumonia");
validCols <- c(11, 17, 23);
idx <- which(validOutcomes == outcome);
outcomeCol <- validCols[idx[1]];
if (is.na(outcomeCol)){
stop("invalid outcome");
}
# split data by state
data <- read.csv("outcome-of-care-measures.csv", header=TRUE, sep=",", colClasses = "character");
colnames <- names(data);
colnames <- names(data);
hospitalCol <- which(colnames == "Hospital.Name");
stateCol <- which(colnames == "State");
data[, outcomeCol] <- suppressWarnings(as.numeric(data[, outcomeCol]));
data <- subset(data, !is.na(data[, outcomeCol]));
data <- data.frame(name=data[,hospitalCol], State=data[,stateCol], outcome=data[,outcomeCol]);
stateData <- split(data, data$State);
stateData <- lapply(stateData, function(item){
item <- item[order(item$outcome, item$name), ];
if ("best" == num){
return(item[1,]);
}else if ("worst" == num){
return(item[nrow(item),]);
}else{
return(item[num,]);
}
});
vecState <- names(stateData);
vecHospital <- vapply(stateData, function(item){as.character(item$name)}, character(1))
data.frame(hospital=vecHospital, state=vecState)
source("rankhospital.R");
rankhospital("TX", "heart failure", 4)
#[1] "DETAR HOSPITAL NAVARRO">
rankhospital("MD", "heart attack", "worst")
#[1] "HARFORD MEMORIAL HOSPITAL">
rankhospital("MN", "heart attack", 5000)
#[1] NA
source("rankall.R"); head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
